version: '3.7'
services:
  db:
    container_name: geoserver-db
    image: mdillon/postgis:11
    env_file: .env
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD}
      NETWORK_ACCESS: internal
    networks:
      - proxy_net
    # Exposing the port makes working from the host via psql easier.
    ports:
      - "5432:5432"
    volumes:
      - type: volume
        source: db_data
        target: /var/lib/postgresql/data
    restart: unless-stopped

  geoserver:
    container_name: geoserver
    env_file: .env
    environment:
      GEOSERVER_DATA_DIR: /geoserver
      GEOWEBCACHE_DATA_DIR: /geoserver/gwc
      ENABLE_JSONP: "true"
      VIRTUAL_HOST: ${GEOSERVER_VIRTUAL_HOST}
      VIRTUAL_PORT: 8080
      NETWORK_ACCESS: internal
      LETSENCRYPT_HOST: ${GEOSERVER_VIRTUAL_HOST}
      LETSENCRYPT_MAIL: ${MY_EMAIL}
    networks:
      - proxy_net
    expose:
      - "8080"
    volumes:
      - type: volume
        source: geoserver_data
        target: /geoserver
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.geoserver
   
  pgadmin:
    container_name: geoserver-pgadmin
    env_file: .env
    # dpage/pgadmin4 is the official release
    image: dpage/pgadmin4:4.3
    networks:
      - proxy_net
# Use this when running behind reverse proxy      
    expose:
      - "80"
# Only open this up for test
#    ports:
#      - "80:80"
    environment:
      VIRTUAL_HOST: ${PGADMIN_VIRTUAL_HOST}
      VIRTUAL_PORT: 80
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      # Added SCRIPT_NAME to solve this problem: https://stackoverflow.com/questions/46381668/pgadmin4-wont-work-in-specific-location-behind-nginx
#      SCRIPT_NAME: /pgadmin4
      NETWORK_ACCESS: internal
      LETSENCRYPT_HOST: ${PGADMIN_VIRTUAL_HOST}
      LETSENCRYPT_MAIL: ${MY_EMAIL}

volumes:
  db_data:
    name: geoserver_postgis_data

  geoserver_data:
    name: geoserver_data

networks:
  # This is a network we share with our reverse proxy
  proxy_net:
    name: proxy_net
    # Won't be created or destroyed with docker-compose up|down
    external: true
